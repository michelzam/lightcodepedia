module:
  - name: demo
    doc: Demo for SIGCSE
    icon: üé≠

imports:
  - !Module {name: blocks, hidden: True}
  - !Module {name: inspectors, hidden: True}
  - !Module {streamlit: inspectors, hidden: True, as_name: st}

classes:

  - !Class
    name: Demo
    bases: [ kore.Object ]
    doc: Demo class
    attributes:
      - !Attribute
        name: name
        type: str
        default: Demo instance
    states: [running, designing, testing, documenting]
    methods:
      - !Method
        name: run
        preconditions: [ designing, testing, documenting ]
        postcondition: running
        doc: Switch to running mode
        code: |
          scene = self._module.instances[0]
          scene.show_backstage = False

      - !Method
        name: hello
        preconditions: [ running ]
        doc: Hello World
        code: |
          return f"Hello from Lightcode! üéâ I'm {self.name}. Eager to guide you."

      - !Method
        name: design
        preconditions: [ running, testing, documenting ]
        postcondition: designing
        doc: Switch to designing mode
        code: |
          scene = self._module.instances[0]
          scene.show_backstage = True
          return "Check out the model diagram in the backstage area below."

      - !Method
        name: layout
        preconditions: [ designing ]
        doc: Layout the scene
        code: |
          scene = self._module.instances[0]
          if scene:
            if type(scene).__name__ == "Scene":
              scene._layout(module=scene._module)
      - !Method
        name: code
        preconditions: [ designing ]
        doc: Show the code
        code: |
          my_type = type(self)._class
          my_codes = [m for m in my_type.methods if m.name == "hello"]
          py_code = 'def hello(self):\n    '
          if len(my_codes) > 0:
            py_code += my_codes[0].code
            st.code(py_code, language='python')

      - !Method
        name: test
        preconditions: [ designing, running, documenting ]
        postcondition: testing
        doc: Switch to testing mode

      - !Method
        name: run_tests
        preconditions: [ testing ]
        doc: Run the tests
        code: |            
          self._test_module()
                    

instances:

  - !Scene
    icon: "üé¨"
    as_name: scene
    title: Demo
    lines:
    - 1
    - 1
    - 1
    show_backstage: false

  - !Demo &demo
    name: Lucky

  - !Text
    icon: üê∂
    title: "Ready to play and learn?"
    text: |
      Hover the mouse over buttons, click around to change states, disclose behavior with interaction traces, 
      and discover the lightcode perspective.
    media: dog.png

  - !Inspector
    source: *demo


  - !Text
    icon: "üìê"
    title: "Model"
    text: |
      Class diagram with state machine.

    media: demo_diagram.png
